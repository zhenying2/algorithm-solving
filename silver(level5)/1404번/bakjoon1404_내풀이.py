import sys
n = list(map(int,sys.stdin.readline().split()))

#0번 참가자의 승률
num0=[]
for i in range(7):
    num0.append(n[i])

#1번 참가자의 승률
num1=[]

for i in range(7,13):
    num1.append(n[i])

#2번 참가자의 승률
num2=[]

for i in range(13,18):
    num2.append(n[i])

#3번 참가자의 승률
num3=[]

for i in range(18,22):
    num3.append(n[i])

#4번 참가자의 승률
num4=[]

for i in range(22,25):
    num4.append(n[i])

#5번 참가자의 승률
num5=[]

for i in range(25,27):
    num5.append(n[i])

#6번 참가자의 승률
num6=[]

for i in range(27,28):
    num6.append(n[i])



#0~7까지 2라운드까지 진출할 확률
#0:num0[0]*((num2[0]*num0[1])+((100-num2[0])*num0[2]))
#1:(100-num0[0])*((num2[0]*num1[0])+((100-num2[0])*num1[1]))
#2:num2[0]*((num0[0]*(100-num0[1]))+((100-num0[0])*(100-num1[0])))
#3:(100-num2[0])*((num0[0]*(100-num0[2]))+((100-num0[0])*(100-num1[1])))
#4:num4[0]*((num6[0]*num4[1])+((100-num6[0])*num4[2]))
#5:(100-num4[0])*((num6[0]*num5[0])+((100-num6[0])*num5[1]))
#6:num6[0]*((num4[0]*(100-num4[1]))+((100-num4[0])*(100-num5[0])))
#7:(100-num6[0])*((num4[0]*(100-num4[2]))+((100-num4[0])*(100-num5[1])))

#0~7 각각이 최종 우승할 확률 => proper1 리스트의 원소로 담음
proper1=[]
proper1.append(num0[0]*((num2[0]*num0[1])+((100-num2[0])*num0[2]))*((num0[3]*num4[0]*((num6[0]*num4[1])+((100-num6[0])*num4[2])))+(num0[4]*(100-num4[0])*((num6[0]*num5[0])+((100-num6[0])*num5[1])))+(num0[5]*num6[0]*((num4[0]*(100-num4[1]))+((100-num4[0])*(100-num5[0]))))+(num0[6]*(100-num6[0])*((num4[0]*(100-num4[2]))+((100-num4[0])*(100-num5[1]))))))
proper1.append((100-num0[0])*((num2[0]*num1[0])+((100-num2[0])*num1[1]))*((num1[2]*num4[0]*((num6[0]*num4[1])+((100-num6[0])*num4[2])))+(num1[3]*(100-num4[0])*((num6[0]*num5[0])+((100-num6[0])*num5[1])))+(num1[4]*num6[0]*((num4[0]*(100-num4[1]))+((100-num4[0])*(100-num5[0]))))+(num1[5]*(100-num6[0])*((num4[0]*(100-num4[2]))+((100-num4[0])*(100-num5[1]))))))
proper1.append(num2[0]*((num0[0]*(100-num0[1]))+((100-num0[0])*(100-num1[0])))*((num2[1]*num4[0]*((num6[0]*num4[1])+((100-num6[0])*num4[2])))+(num2[2]*(100-num4[0])*((num6[0]*num5[0])+((100-num6[0])*num5[1])))+(num2[3]*num6[0]*((num4[0]*(100-num4[1]))+((100-num4[0])*(100-num5[0]))))+(num2[4]*(100-num6[0])*((num4[0]*(100-num4[2]))+((100-num4[0])*(100-num5[1]))))))
proper1.append((100-num2[0])*((num0[0]*(100-num0[2]))+((100-num0[0])*(100-num1[1])))*((num3[0]*num4[0]*((num6[0]*num4[1])+((100-num6[0])*num4[2])))+(num3[1]*(100-num4[0])*((num6[0]*num5[0])+((100-num6[0])*num5[1])))+(num3[2]*num6[0]*((num4[0]*(100-num4[1]))+((100-num4[0])*(100-num5[0]))))+(num3[3]*(100-num6[0])*((num4[0]*(100-num4[2]))+((100-num4[0])*(100-num5[1]))))))
proper1.append(num4[0]*((num6[0]*num4[1])+((100-num6[0])*num4[2]))*(((100-num0[3])*num0[0]*((num2[0]*num0[1])+((100-num2[0])*num0[2])))+((100-num1[2])*(100-num0[0])*((num2[0]*num1[0])+((100-num2[0])*num1[1])))+((100-num2[1])*num2[0]*((num0[0]*(100-num0[1]))+((100-num0[0])*(100-num1[0]))))+((100-num3[0])*(100-num2[0])*((num0[0]*(100-num0[2]))+((100-num0[0])*(100-num1[1]))))))
proper1.append((100-num4[0])*((num6[0]*num5[0])+((100-num6[0])*num5[1]))*(((100-num0[4])*num0[0]*((num2[0]*num0[1])+((100-num2[0])*num0[2])))+((100-num1[3])*(100-num0[0])*((num2[0]*num1[0])+((100-num2[0])*num1[1])))+((100-num2[2])*num2[0]*((num0[0]*(100-num0[1]))+((100-num0[0])*(100-num1[0]))))+((100-num3[1])*(100-num2[0])*((num0[0]*(100-num0[2]))+((100-num0[0])*(100-num1[1]))))))
proper1.append(num6[0]*((num4[0]*(100-num4[1]))+((100-num4[0])*(100-num5[0])))*(((100-num0[5])*num0[0]*((num2[0]*num0[1])+((100-num2[0])*num0[2])))+((100-num1[4])*(100-num0[0])*((num2[0]*num1[0])+((100-num2[0])*num1[1])))+((100-num2[3])*num2[0]*((num0[0]*(100-num0[1]))+((100-num0[0])*(100-num1[0]))))+((100-num3[2])*(100-num2[0])*((num0[0]*(100-num0[2]))+((100-num0[0])*(100-num1[1]))))))
proper1.append((100-num6[0])*((num4[0]*(100-num4[2]))+((100-num4[0])*(100-num5[1])))*(((100-num0[6])*num0[0]*((num2[0]*num0[1])+((100-num2[0])*num0[2])))+((100-num1[5])*(100-num0[0])*((num2[0]*num1[0])+((100-num2[0])*num1[1])))+((100-num2[4])*num2[0]*((num0[0]*(100-num0[1]))+((100-num0[0])*(100-num1[0]))))+((100-num3[3])*(100-num2[0])*((num0[0]*(100-num0[2]))+((100-num0[0])*(100-num1[1]))))))

for i in range(len(proper1)):
    proper1[i]=proper1[i]/100000000000000
    print(proper1[i],end=" ")



"""
((num0[3]*num4[0]*((num6[0]*num4[1])+((100-num6[0])*num4[2])))+(num0[4]*(100-num4[0])*((num6[0]*num5[0])+((100-num6[0])*num5[1])))+(num0[5]*num6[0]*((num4[0]*(100-num4[1]))+((100-num4[0])*(100-num5[0]))))+(num0[6]*(100-num6[0])*((num4[0]*(100-num4[2]))+((100-num4[0])*(100-num5[1])))))
((num1[2]*num4[0]*((num6[0]*num4[1])+((100-num6[0])*num4[2])))+(num1[3]*(100-num4[0])*((num6[0]*num5[0])+((100-num6[0])*num5[1])))+(num1[4]*num6[0]*((num4[0]*(100-num4[1]))+((100-num4[0])*(100-num5[0]))))+(num1[5]*(100-num6[0])*((num4[0]*(100-num4[2]))+((100-num4[0])*(100-num5[1])))))
((num2[1]*num4[0]*((num6[0]*num4[1])+((100-num6[0])*num4[2])))+(num2[2]*(100-num4[0])*((num6[0]*num5[0])+((100-num6[0])*num5[1])))+(num2[3]*num6[0]*((num4[0]*(100-num4[1]))+((100-num4[0])*(100-num5[0]))))+(num2[4]*(100-num6[0])*((num4[0]*(100-num4[2]))+((100-num4[0])*(100-num5[1])))))
((num3[0]*num4[0]*((num6[0]*num4[1])+((100-num6[0])*num4[2])))+(num3[1]*(100-num4[0])*((num6[0]*num5[0])+((100-num6[0])*num5[1])))+(num3[2]*num6[0]*((num4[0]*(100-num4[1]))+((100-num4[0])*(100-num5[0]))))+(num3[3]*(100-num6[0])*((num4[0]*(100-num4[2]))+((100-num4[0])*(100-num5[1])))))

(((100-num0[3])*num0[0]*((num2[0]*num0[1])+((100-num2[0])*num0[2])))+((100-num1[2])*(100-num0[0])*((num2[0]*num1[0])+((100-num2[0])*num1[1])))+((100-num2[1])*num2[0]*((num0[0]*(100-num0[1]))+((100-num0[0])*(100-num1[0]))))+((100-num3[0])*(100-num2[0])*((num0[0]*(100-num0[2]))+((100-num0[0])*(100-num1[1])))))
(((100-num0[4])*num0[0]*((num2[0]*num0[1])+((100-num2[0])*num0[2])))+((100-num1[3])*(100-num0[0])*((num2[0]*num1[0])+((100-num2[0])*num1[1])))+((100-num2[2])*num2[0]*((num0[0]*(100-num0[1]))+((100-num0[0])*(100-num1[0]))))+((100-num3[1])*(100-num2[0])*((num0[0]*(100-num0[2]))+((100-num0[0])*(100-num1[1])))))
(((100-num0[5])*num0[0]*((num2[0]*num0[1])+((100-num2[0])*num0[2])))+((100-num1[4])*(100-num0[0])*((num2[0]*num1[0])+((100-num2[0])*num1[1])))+((100-num2[3])*num2[0]*((num0[0]*(100-num0[1]))+((100-num0[0])*(100-num1[0]))))+((100-num3[2])*(100-num2[0])*((num0[0]*(100-num0[2]))+((100-num0[0])*(100-num1[1])))))
(((100-num0[6])*num0[0]*((num2[0]*num0[1])+((100-num2[0])*num0[2])))+((100-num1[5])*(100-num0[0])*((num2[0]*num1[0])+((100-num2[0])*num1[1])))+((100-num2[4])*num2[0]*((num0[0]*(100-num0[1]))+((100-num0[0])*(100-num1[0]))))+((100-num3[3])*(100-num2[0])*((num0[0]*(100-num0[2]))+((100-num0[0])*(100-num1[1])))))
"""

